name: CI/CD Pipeline with Docker, Snyk, and ZAP

on:
  push:
    branches: [main]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Snyk scan
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

  heroku-deploy:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com

      - name: Build Docker image
        run: docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web .

      - name: Push Docker image to Heroku
        run: docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      - name: Release Docker image on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          curl -n -X PATCH https://api.heroku.com/apps/${{ secrets.HEROKU_APP_NAME }}/formation \
          -d '{"updates":[{"type":"web","docker_image":"'"$(docker inspect registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web --format={{.Id}})"'"}]}' \
          -H "Content-Type: application/json" \
          -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
          -H "Authorization: Bearer $HEROKU_API_KEY"

  zap-dast:
    needs: heroku-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Create ZAP output folder
        run: mkdir zap-output

      - name: Pull ZAP container
        run: docker pull ghcr.io/zaproxy/zaproxy:stable

      - name: Run OWASP ZAP full scan manually
        run: |
          docker run -v ${{ github.workspace }}/zap-output:/zap/wrk/:rw \
            --network="host" ghcr.io/zaproxy/zaproxy:stable zap-full-scan.py \
            -t https://securecart-eshapatel-df12c7c8828c.herokuapp.com/ \
            -J report_json.json -w report_md.md -r report_html.html

      - name: Upload ZAP scan results
        uses: actions/upload-artifact@v4
        with:
          name: zapscanreport
          path: |
            zap-output/report_json.json
            zap-output/report_md.md
            zap-output/report_html.html
